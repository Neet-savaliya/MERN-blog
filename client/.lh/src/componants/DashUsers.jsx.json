{
    "sourceFile": "src/componants/DashUsers.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1723100361572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723100367582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/user/posts\", {\r\n+            const res = await fetch(\"/api/user/users\", {\r\n                 method: \"GET\",\r\n             });\r\n             const data = await res.json();\r\n             if (res.ok) {\r\n"
                },
                {
                    "date": 1723100428998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,15 @@\n import { Link } from \"react-router-dom\";\r\n \r\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [userPost, setUserPost] = useState([]);\r\n+    const [user, setUserPost] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/user/users\", {\r\n+            const res = await fetch(\"/api/user/getUsers\", {\r\n                 method: \"GET\",\r\n             });\r\n             const data = await res.json();\r\n             if (res.ok) {\r\n"
                },
                {
                    "date": 1723100438878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Link } from \"react-router-dom\";\r\n \r\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [user, setUserPost] = useState([]);\r\n+    const [users, setUserPost] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1723100449185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Link } from \"react-router-dom\";\r\n \r\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [users, setUserPost] = useState([]);\r\n+    const [userUsers, setUserPost] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1723100460897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Link } from \"react-router-dom\";\r\n \r\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [userUsers, setUserPost] = useState([]);\r\n+    const [users, setUserPost] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1723100482465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Link } from \"react-router-dom\";\r\n \r\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [users, setUserPost] = useState([]);\r\n+    const [userPost, setUserPost] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n@@ -29,9 +29,9 @@\n         }\r\n     }, [currentUser.payload._id, currentUser.payload.admin]);\r\n \r\n     const handleShowMore = async () => {\r\n-        const startIndex = userPost.length;\r\n+        const startIndex = users.length;\r\n         try {\r\n             const res = await fetch(\r\n                 `/api/post/Posts?userId=${currentUser.payload._id}&startIndex=${startIndex}`\r\n             );\r\n"
                },
                {
                    "date": 1723100493547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Link } from \"react-router-dom\";\r\n \r\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [userPost, setUserPost] = useState([]);\r\n+    const [users, setUserPost] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n@@ -39,9 +39,9 @@\n             const data = await res.json();\r\n             console.log(data);\r\n             if (res.ok && data.post.length > 0) {\r\n                 setUserPost((prev) => [...prev, ...data.post]);\r\n-                console.log(userPost);\r\n+                console.log(users);\r\n             }\r\n             if (data.post.length < 9) {\r\n                 setShowMore(false);\r\n             }\r\n@@ -71,9 +71,9 @@\n     };\r\n \r\n     return (\r\n         <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n-            {currentUser.payload.admin && userPost.length > 0 ? (\r\n+            {currentUser.payload.admin && users.length > 0 ? (\r\n                 <>\r\n                     <Table hoverable className=\"shadow-md \">\r\n                         <Table.Head key=\"head\">\r\n                             <Table.HeadCell key=\"Date\">\r\n@@ -92,9 +92,9 @@\n                             <Table.HeadCell key=\"edit\">\r\n                                 <span>Edit</span>\r\n                             </Table.HeadCell>\r\n                         </Table.Head>\r\n-                        {userPost.map((post) => (\r\n+                        {users.map((post) => (\r\n                             // eslint-disable-next-line react/jsx-key\r\n                             <Table.Body key={`body${post._id}`}>\r\n                                 <Table.Row\r\n                                     className=\"bg-white dark:border-gray-700 dark:bg-gray-800\"\r\n"
                },
                {
                    "date": 1723100506215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Link } from \"react-router-dom\";\r\n \r\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [users, setUserPost] = useState([]);\r\n+    const [users, setUsers] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deletePostId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n@@ -19,9 +19,9 @@\n             if (res.ok) {\r\n                 if (data.post.length <= 9) {\r\n                     setShowMore(false);\r\n                 }\r\n-                setUserPost(data.post);\r\n+                setUsers(data.post);\r\n             }\r\n         };\r\n \r\n         if (currentUser.payload.admin) {\r\n@@ -38,9 +38,9 @@\n \r\n             const data = await res.json();\r\n             console.log(data);\r\n             if (res.ok && data.post.length > 0) {\r\n-                setUserPost((prev) => [...prev, ...data.post]);\r\n+                setUsers((prev) => [...prev, ...data.post]);\r\n                 console.log(users);\r\n             }\r\n             if (data.post.length < 9) {\r\n                 setShowMore(false);\r\n@@ -60,9 +60,9 @@\n             setShowModel(false);\r\n             if (!res.ok) {\r\n                 console.log(data.message);\r\n             } else {\r\n-                setUserPost((prev) =>\r\n+                setUsers((prev) =>\r\n                     prev.filter((post) => post._id !== deletePostId)\r\n                 );\r\n             }\r\n         } catch (error) {\r\n"
                },
                {
                    "date": 1723100542552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [users, setUsers] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deletePostId, setDeletePostId] = useState(null);\r\n+    const [deleteId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n"
                },
                {
                    "date": 1723100555197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [users, setUsers] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteId, setDeletePostId] = useState(null);\r\n+    const [deleteUserId, setDeletePostId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n@@ -50,9 +50,9 @@\n         }\r\n     };\r\n \r\n     const deletePostHandler = async () => {\r\n-        const postId = deletePostId;\r\n+        const postId = deleteUserId;\r\n         try {\r\n             const res = await fetch(`/api/post/delete-post/${postId}`, {\r\n                 method: \"delete\",\r\n             });\r\n@@ -61,9 +61,9 @@\n             if (!res.ok) {\r\n                 console.log(data.message);\r\n             } else {\r\n                 setUsers((prev) =>\r\n-                    prev.filter((post) => post._id !== deletePostId)\r\n+                    prev.filter((post) => post._id !== deleteUserId)\r\n                 );\r\n             }\r\n         } catch (error) {\r\n             console.log(error);\r\n"
                },
                {
                    "date": 1723100572378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashUsers() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [users, setUsers] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteUserId, setDeletePostId] = useState(null);\r\n+    const [deleteUserId, setDeleteUserId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n@@ -126,9 +126,9 @@\n                                     <Table.Cell key={`delete${post._id}`}>\r\n                                         <span\r\n                                             className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n                                             onClick={() => {\r\n-                                                setDeletePostId(post._id);\r\n+                                                setDeleteUserId(post._id);\r\n                                                 setShowModel(true);\r\n                                             }}\r\n                                         >\r\n                                             Delete\r\n"
                },
                {
                    "date": 1723100612805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     const handleShowMore = async () => {\r\n         const startIndex = users.length;\r\n         try {\r\n             const res = await fetch(\r\n-                `/api/post/Posts?userId=${currentUser.payload._id}&startIndex=${startIndex}`\r\n+                `/api/user/Posts?userId=${currentUser.payload._id}&startIndex=${startIndex}`\r\n             );\r\n \r\n             const data = await res.json();\r\n             console.log(data);\r\n"
                },
                {
                    "date": 1723100625226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     const handleShowMore = async () => {\r\n         const startIndex = users.length;\r\n         try {\r\n             const res = await fetch(\r\n-                `/api/user/Posts?userId=${currentUser.payload._id}&startIndex=${startIndex}`\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n             );\r\n \r\n             const data = await res.json();\r\n             console.log(data);\r\n"
                },
                {
                    "date": 1723100644023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n             const data = await res.json();\r\n             console.log(data);\r\n             if (res.ok && data.post.length > 0) {\r\n-                setUsers((prev) => [...prev, ...data.post]);\r\n+                setUsers((prev) => [...prev, ...data.users]);\r\n                 console.log(users);\r\n             }\r\n             if (data.post.length < 9) {\r\n                 setShowMore(false);\r\n@@ -121,9 +121,11 @@\n                                         >\r\n                                             {post.title}\r\n                                         </Link>\r\n                                     </Table.Cell>\r\n-                                    <Table.Cell key={post.title + post.slug}>{post.category}</Table.Cell>\r\n+                                    <Table.Cell key={post.title + post.slug}>\r\n+                                        {post.category}\r\n+                                    </Table.Cell>\r\n                                     <Table.Cell key={`delete${post._id}`}>\r\n                                         <span\r\n                                             className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n                                             onClick={() => {\r\n"
                },
                {
                    "date": 1723100680996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n             console.log(error);\r\n         }\r\n     };\r\n \r\n-    const deletePostHandler = async () => {\r\n+    const deleteUserHandler = async () => {\r\n         const postId = deleteUserId;\r\n         try {\r\n             const res = await fetch(`/api/post/delete-post/${postId}`, {\r\n                 method: \"delete\",\r\n@@ -174,9 +174,9 @@\n                         <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n                             Are you sure you want to delete your account?\r\n                         </h3>\r\n                         <div className=\"flex justify-center gap-4\">\r\n-                            <Button color=\"failure\" onClick={deletePostHandler}>\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n                                 yes,Delete\r\n                             </Button>\r\n                             <Button\r\n                                 color=\"gray\"\r\n"
                },
                {
                    "date": 1723100689972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         }\r\n     };\r\n \r\n     const deleteUserHandler = async () => {\r\n-        const user = deleteUserId;\r\n+        const use = deleteUserId;\r\n         try {\r\n             const res = await fetch(`/api/post/delete-post/${postId}`, {\r\n                 method: \"delete\",\r\n             });\r\n"
                },
                {
                    "date": 1723100756723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,176 @@\n+import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Link } from \"react-router-dom\";\r\n+\r\n+export default function DashUsers() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [users, setUsers] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);\r\n+    const [deleteUserId, setDeleteUserId] = useState(null);\r\n+    const [showModel, setShowModel] = useState(false);\r\n+    useEffect(() => {\r\n+        const fetchPost = async () => {\r\n+            const res = await fetch(\"/api/user/getUsers\", {\r\n+                method: \"GET\",\r\n+            });\r\n+            const data = await res.json();\r\n+            if (res.ok) {\r\n+                if (data.post.length <= 9) {\r\n+                    setShowMore(false);\r\n+                }\r\n+                setUsers(data.post);\r\n+            }\r\n+        };\r\n+\r\n+        if (currentUser.payload.admin) {\r\n+            fetchPost();\r\n+        }\r\n+    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n+\r\n+    const handleShowMore = async () => {\r\n+        const startIndex = users.length;\r\n+        try {\r\n+            const res = await fetch(\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n+            );\r\n+\r\n+            const data = await res.json();\r\n+            console.log(data);\r\n+            if (res.ok && data.post.length > 0) {\r\n+                setUsers((prev) => [...prev, ...data.users]);\r\n+                console.log(users);\r\n+            }\r\n+            if (data.post.length < 9) {\r\n+                setShowMore(false);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+\r\n+    return (\r\n+        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n+            {currentUser.payload.admin && users.length > 0 ? (\r\n+                <>\r\n+                    <Table hoverable className=\"shadow-md \">\r\n+                        <Table.Head key=\"head\">\r\n+                            <Table.HeadCell key=\"Date\">\r\n+                                Date Created\r\n+                            </Table.HeadCell>\r\n+                            <Table.HeadCell key=\"Image\">\r\n+                                User image\r\n+                            </Table.HeadCell>\r\n+                            <Table.HeadCell key=\"title\">\r\n+                                Post title\r\n+                            </Table.HeadCell>\r\n+                            <Table.HeadCell key=\"category\">\r\n+                                Category\r\n+                            </Table.HeadCell>\r\n+                            <Table.HeadCell key=\"Delete\">Delete</Table.HeadCell>\r\n+                            <Table.HeadCell key=\"edit\">\r\n+                                <span>Edit</span>\r\n+                            </Table.HeadCell>\r\n+                        </Table.Head>\r\n+                        {users.map((post) => (\r\n+                            // eslint-disable-next-line react/jsx-key\r\n+                            <Table.Body key={`body${post._id}`}>\r\n+                                <Table.Row\r\n+                                    className=\"bg-white dark:border-gray-700 dark:bg-gray-800\"\r\n+                                    key=\"row\"\r\n+                                >\r\n+                                    <Table.Cell key={post.updatedAt + post._id}>\r\n+                                        {new Date(\r\n+                                            post.updatedAt\r\n+                                        ).toLocaleDateString()}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={post.slug}>\r\n+                                        <Link to={`/post/${post.slug}`}>\r\n+                                            <img\r\n+                                                src={post.image}\r\n+                                                alt=\"Post Image\"\r\n+                                                className=\"w-20 h-10 object-cover bg-gray-500\"\r\n+                                            />\r\n+                                        </Link>\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={post.title}>\r\n+                                        <Link\r\n+                                            className=\"font-medium text-gray-900 dark:text-white\"\r\n+                                            to={`/post/${post.slug}`}\r\n+                                        >\r\n+                                            {post.title}\r\n+                                        </Link>\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={post.title + post.slug}>\r\n+                                        {post.category}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`delete${post._id}`}>\r\n+                                        <span\r\n+                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n+                                            onClick={() => {\r\n+                                                setDeleteUserId(post._id);\r\n+                                                setShowModel(true);\r\n+                                            }}\r\n+                                        >\r\n+                                            Delete\r\n+                                        </span>\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`edit${post._id} `}>\r\n+                                        <Link to={`/update-post/${post._id}`}>\r\n+                                            <span className=\"text-teal-500 cursor-pointer hover:underline\">\r\n+                                                Edit\r\n+                                            </span>\r\n+                                        </Link>\r\n+                                    </Table.Cell>\r\n+                                </Table.Row>\r\n+                            </Table.Body>\r\n+                        ))}\r\n+                    </Table>\r\n+                    {showMore && (\r\n+                        <button\r\n+                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n+                            onClick={handleShowMore}\r\n+                        >\r\n+                            Show more\r\n+                        </button>\r\n+                    )}\r\n+                </>\r\n+            ) : (\r\n+                <p>No post yet..</p>\r\n+            )}\r\n+            <Modal\r\n+                show={showModel}\r\n+                onClose={() => {\r\n+                    setShowModel(false);\r\n+                }}\r\n+                size=\"md\"\r\n+                popup\r\n+            >\r\n+                <ModalHeader />\r\n+                <ModalBody>\r\n+                    <div className=\"text-center\">\r\n+                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n+                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n+                            Are you sure you want to delete your account?\r\n+                        </h3>\r\n+                        <div className=\"flex justify-center gap-4\">\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n+                                yes,Delete\r\n+                            </Button>\r\n+                            <Button\r\n+                                color=\"gray\"\r\n+                                onClick={() => {\r\n+                                    setShowModel(false);\r\n+                                }}\r\n+                            >\r\n+                                No,cancel\r\n+                            </Button>\r\n+                        </div>\r\n+                    </div>\r\n+                </ModalBody>\r\n+            </Modal>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                }
            ],
            "date": 1723100361572,
            "name": "Commit-0",
            "content": "import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function DashUsers() {\r\n    const { currentUser } = useSelector((state) => state.user);\r\n    const [userPost, setUserPost] = useState([]);\r\n    const [showMore, setShowMore] = useState(true);\r\n    const [deletePostId, setDeletePostId] = useState(null);\r\n    const [showModel, setShowModel] = useState(false);\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            const res = await fetch(\"/api/user/posts\", {\r\n                method: \"GET\",\r\n            });\r\n            const data = await res.json();\r\n            if (res.ok) {\r\n                if (data.post.length <= 9) {\r\n                    setShowMore(false);\r\n                }\r\n                setUserPost(data.post);\r\n            }\r\n        };\r\n\r\n        if (currentUser.payload.admin) {\r\n            fetchPost();\r\n        }\r\n    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n\r\n    const handleShowMore = async () => {\r\n        const startIndex = userPost.length;\r\n        try {\r\n            const res = await fetch(\r\n                `/api/post/Posts?userId=${currentUser.payload._id}&startIndex=${startIndex}`\r\n            );\r\n\r\n            const data = await res.json();\r\n            console.log(data);\r\n            if (res.ok && data.post.length > 0) {\r\n                setUserPost((prev) => [...prev, ...data.post]);\r\n                console.log(userPost);\r\n            }\r\n            if (data.post.length < 9) {\r\n                setShowMore(false);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const deletePostHandler = async () => {\r\n        const postId = deletePostId;\r\n        try {\r\n            const res = await fetch(`/api/post/delete-post/${postId}`, {\r\n                method: \"delete\",\r\n            });\r\n            const data = await res.json();\r\n            setShowModel(false);\r\n            if (!res.ok) {\r\n                console.log(data.message);\r\n            } else {\r\n                setUserPost((prev) =>\r\n                    prev.filter((post) => post._id !== deletePostId)\r\n                );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n            {currentUser.payload.admin && userPost.length > 0 ? (\r\n                <>\r\n                    <Table hoverable className=\"shadow-md \">\r\n                        <Table.Head key=\"head\">\r\n                            <Table.HeadCell key=\"Date\">\r\n                                Date Updated\r\n                            </Table.HeadCell>\r\n                            <Table.HeadCell key=\"Image\">\r\n                                Post image\r\n                            </Table.HeadCell>\r\n                            <Table.HeadCell key=\"title\">\r\n                                Post title\r\n                            </Table.HeadCell>\r\n                            <Table.HeadCell key=\"category\">\r\n                                Category\r\n                            </Table.HeadCell>\r\n                            <Table.HeadCell key=\"Delete\">Delete</Table.HeadCell>\r\n                            <Table.HeadCell key=\"edit\">\r\n                                <span>Edit</span>\r\n                            </Table.HeadCell>\r\n                        </Table.Head>\r\n                        {userPost.map((post) => (\r\n                            // eslint-disable-next-line react/jsx-key\r\n                            <Table.Body key={`body${post._id}`}>\r\n                                <Table.Row\r\n                                    className=\"bg-white dark:border-gray-700 dark:bg-gray-800\"\r\n                                    key=\"row\"\r\n                                >\r\n                                    <Table.Cell key={post.updatedAt + post._id}>\r\n                                        {new Date(\r\n                                            post.updatedAt\r\n                                        ).toLocaleDateString()}\r\n                                    </Table.Cell>\r\n                                    <Table.Cell key={post.slug}>\r\n                                        <Link to={`/post/${post.slug}`}>\r\n                                            <img\r\n                                                src={post.image}\r\n                                                alt=\"Post Image\"\r\n                                                className=\"w-20 h-10 object-cover bg-gray-500\"\r\n                                            />\r\n                                        </Link>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell key={post.title}>\r\n                                        <Link\r\n                                            className=\"font-medium text-gray-900 dark:text-white\"\r\n                                            to={`/post/${post.slug}`}\r\n                                        >\r\n                                            {post.title}\r\n                                        </Link>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell key={post.title + post.slug}>{post.category}</Table.Cell>\r\n                                    <Table.Cell key={`delete${post._id}`}>\r\n                                        <span\r\n                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n                                            onClick={() => {\r\n                                                setDeletePostId(post._id);\r\n                                                setShowModel(true);\r\n                                            }}\r\n                                        >\r\n                                            Delete\r\n                                        </span>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell key={`edit${post._id} `}>\r\n                                        <Link to={`/update-post/${post._id}`}>\r\n                                            <span className=\"text-teal-500 cursor-pointer hover:underline\">\r\n                                                Edit\r\n                                            </span>\r\n                                        </Link>\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        ))}\r\n                    </Table>\r\n                    {showMore && (\r\n                        <button\r\n                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n                            onClick={handleShowMore}\r\n                        >\r\n                            Show more\r\n                        </button>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <p>No post yet..</p>\r\n            )}\r\n            <Modal\r\n                show={showModel}\r\n                onClose={() => {\r\n                    setShowModel(false);\r\n                }}\r\n                size=\"md\"\r\n                popup\r\n            >\r\n                <ModalHeader />\r\n                <ModalBody>\r\n                    <div className=\"text-center\">\r\n                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n                            Are you sure you want to delete your account?\r\n                        </h3>\r\n                        <div className=\"flex justify-center gap-4\">\r\n                            <Button color=\"failure\" onClick={deletePostHandler}>\r\n                                yes,Delete\r\n                            </Button>\r\n                            <Button\r\n                                color=\"gray\"\r\n                                onClick={() => {\r\n                                    setShowModel(false);\r\n                                }}\r\n                            >\r\n                                No,cancel\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n"
        }
    ]
}