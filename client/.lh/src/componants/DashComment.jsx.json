{
    "sourceFile": "src/componants/DashComment.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1726886332047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1726886338150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,6 @@\n-rfc\r\n+\r\n+export default function DashComment() {\r\n+  return (\r\n+    <div>DashComment</div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1726886391735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,175 @@\n+import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n+import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n+import { useSelector } from \"react-redux\";\r\n \r\n-export default function DashComment() {\r\n-  return (\r\n-    <div>DashComment</div>\r\n-  )\r\n+export default function DashUsers() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [users, setUsers] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);\r\n+    const [deleteUserId, setDeleteUserId] = useState(null);\r\n+    const [showModel, setShowModel] = useState(false);\r\n+    useEffect(() => {\r\n+        const fetchPost = async () => {\r\n+            const res = await fetch(\"/api/user/getUsers\", {\r\n+                method: \"GET\",\r\n+            });\r\n+            const data = await res.json();\r\n+            if (res.ok) {\r\n+                if (data.users.length <= 9) {\r\n+                    setShowMore(false);\r\n+                }\r\n+                setUsers(data.users);\r\n+            }\r\n+        };\r\n+\r\n+        if (currentUser.payload.admin) {\r\n+            fetchPost();\r\n+        }\r\n+    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n+\r\n+    const handleShowMore = async () => {\r\n+        const startIndex = users.length;\r\n+        try {\r\n+            const res = await fetch(\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n+            );\r\n+\r\n+            const data = await res.json();\r\n+            if (res.ok && data.users.length > 0) {\r\n+                setUsers((prev) => [...prev, ...data.users]);\r\n+            }\r\n+            if (data.users.length < 9) {\r\n+                setShowMore(false);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const deleteUserHandler = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n+                method: \"DELETE\",\r\n+            });\r\n+            const data = await res.json();\r\n+\r\n+            if (res.ok) {\r\n+                setUsers((prev) =>\r\n+                    prev.filter((user) => user._id !== deleteUserId)\r\n+                );\r\n+                setShowModel(false);\r\n+            } else {\r\n+                console.log(data.message);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n+            {currentUser.payload.admin && users.length > 0 ? (\r\n+                <>\r\n+                    <Table hoverable className=\"shadow-md \">\r\n+                        <Table.Head>\r\n+                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n+                            <Table.HeadCell>User image</Table.HeadCell>\r\n+                            <Table.HeadCell>Username</Table.HeadCell>\r\n+                            <Table.HeadCell>Email</Table.HeadCell>\r\n+                            <Table.HeadCell>Admin</Table.HeadCell>\r\n+                            <Table.HeadCell>Delete</Table.HeadCell>\r\n+                        </Table.Head>\r\n+                        {users.map((user) => (\r\n+                            // eslint-disable-next-line react/jsx-key\r\n+                            <Table.Body key={`body${user._id}`}>\r\n+                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n+                                    <Table.Cell key={user.updatedAt + user._id}>\r\n+                                        {new Date(\r\n+                                            user.createdAt\r\n+                                        ).toLocaleDateString()}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.slug}>\r\n+                                        <img\r\n+                                            src={user.profilePicture}\r\n+                                            alt=\"Post Image\"\r\n+                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n+                                        />\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title}>\r\n+                                        {user.username}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title + user.slug}>\r\n+                                        {user.email}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell>\r\n+                                        {user.admin ? (\r\n+                                            <FaCheck className=\"text-green-500\" />\r\n+                                        ) : (\r\n+                                            <FaTimes className=\"text-red-500\" />\r\n+                                        )}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`delete${user._id}`}>\r\n+                                        <span\r\n+                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n+                                            onClick={() => {\r\n+                                                setDeleteUserId(user._id);\r\n+                                                setShowModel(true);\r\n+                                            }}\r\n+                                        >\r\n+                                            Delete\r\n+                                        </span>\r\n+                                    </Table.Cell>\r\n+                                </Table.Row>\r\n+                            </Table.Body>\r\n+                        ))}\r\n+                    </Table>\r\n+                    {showMore && (\r\n+                        <button\r\n+                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n+                            onClick={handleShowMore}\r\n+                        >\r\n+                            Show more\r\n+                        </button>\r\n+                    )}\r\n+                </>\r\n+            ) : (\r\n+                <p>No Users yet..</p>\r\n+            )}\r\n+            <Modal\r\n+                show={showModel}\r\n+                onClose={() => {\r\n+                    setShowModel(false);\r\n+                }}\r\n+                size=\"md\"\r\n+                popup\r\n+            >\r\n+                <ModalHeader />\r\n+                <ModalBody>\r\n+                    <div className=\"text-center\">\r\n+                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n+                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n+                            Are you sure you want to delete this account?\r\n+                        </h3>\r\n+                        <div className=\"flex justify-center gap-4\">\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n+                                yes,Delete\r\n+                            </Button>\r\n+                            <Button\r\n+                                color=\"gray\"\r\n+                                onClick={() => {\r\n+                                    setShowModel(false);\r\n+                                }}\r\n+                            >\r\n+                                No,cancel\r\n+                            </Button>\r\n+                        </div>\r\n+                    </div>\r\n+                </ModalBody>\r\n+            </Modal>\r\n+        </div>\r\n+    );\r\n }\r\n"
                },
                {
                    "date": 1726886401848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n import { useSelector } from \"react-redux\";\r\n \r\n-export default function DashUsers() {\r\n+export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [users, setUsers] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deleteUserId, setDeleteUserId] = useState(null);\r\n"
                },
                {
                    "date": 1726886416475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { useSelector } from \"react-redux\";\r\n \r\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [users, setUsers] = useState([]);\r\n+    const [userusers, setUsers] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deleteUserId, setDeleteUserId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1726886453710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n import { useSelector } from \"react-redux\";\r\n \r\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [userusers, setUsers] = useState([]);\r\n-    const [showMore, setShowMore] = useState(true);\r\n+    const [users, setUsers] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);comments\r\n     const [deleteUserId, setDeleteUserId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n"
                },
                {
                    "date": 1726886461838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \r\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [users, setUsers] = useState([]);\r\n-    const [showMore, setShowMore] = useState(true);comments\r\n+    const [showMore, setShowMore] = useState(true);\r\n     const [deleteUserId, setDeleteUserId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n"
                },
                {
                    "date": 1726886468992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { useSelector } from \"react-redux\";\r\n \r\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n-    const [users, setUsers] = useState([]);\r\n+    const [comments, setUsers] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n     const [deleteUserId, setDeleteUserId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1726886475251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n+import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n+import { useSelector } from \"react-redux\";\r\n+\r\n+export default function DashComments() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [comments, setComments] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);\r\n+    const [deleteUserId, setDeleteUserId] = useState(null);\r\n+    const [showModel, setShowModel] = useState(false);\r\n+    useEffect(() => {\r\n+        const fetchPost = async () => {\r\n+            const res = await fetch(\"/api/user/getUsers\", {\r\n+                method: \"GET\",\r\n+            });\r\n+            const data = await res.json();\r\n+            if (res.ok) {\r\n+                if (data.users.length <= 9) {\r\n+                    setShowMore(false);\r\n+                }\r\n+                setUsers(data.users);\r\n+            }\r\n+        };\r\n+\r\n+        if (currentUser.payload.admin) {\r\n+            fetchPost();\r\n+        }\r\n+    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n+\r\n+    const handleShowMore = async () => {\r\n+        const startIndex = users.length;\r\n+        try {\r\n+            const res = await fetch(\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n+            );\r\n+\r\n+            const data = await res.json();\r\n+            if (res.ok && data.users.length > 0) {\r\n+                setUsers((prev) => [...prev, ...data.users]);\r\n+            }\r\n+            if (data.users.length < 9) {\r\n+                setShowMore(false);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const deleteUserHandler = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n+                method: \"DELETE\",\r\n+            });\r\n+            const data = await res.json();\r\n+\r\n+            if (res.ok) {\r\n+                setUsers((prev) =>\r\n+                    prev.filter((user) => user._id !== deleteUserId)\r\n+                );\r\n+                setShowModel(false);\r\n+            } else {\r\n+                console.log(data.message);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n+            {currentUser.payload.admin && users.length > 0 ? (\r\n+                <>\r\n+                    <Table hoverable className=\"shadow-md \">\r\n+                        <Table.Head>\r\n+                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n+                            <Table.HeadCell>User image</Table.HeadCell>\r\n+                            <Table.HeadCell>Username</Table.HeadCell>\r\n+                            <Table.HeadCell>Email</Table.HeadCell>\r\n+                            <Table.HeadCell>Admin</Table.HeadCell>\r\n+                            <Table.HeadCell>Delete</Table.HeadCell>\r\n+                        </Table.Head>\r\n+                        {users.map((user) => (\r\n+                            // eslint-disable-next-line react/jsx-key\r\n+                            <Table.Body key={`body${user._id}`}>\r\n+                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n+                                    <Table.Cell key={user.updatedAt + user._id}>\r\n+                                        {new Date(\r\n+                                            user.createdAt\r\n+                                        ).toLocaleDateString()}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.slug}>\r\n+                                        <img\r\n+                                            src={user.profilePicture}\r\n+                                            alt=\"Post Image\"\r\n+                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n+                                        />\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title}>\r\n+                                        {user.username}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title + user.slug}>\r\n+                                        {user.email}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell>\r\n+                                        {user.admin ? (\r\n+                                            <FaCheck className=\"text-green-500\" />\r\n+                                        ) : (\r\n+                                            <FaTimes className=\"text-red-500\" />\r\n+                                        )}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`delete${user._id}`}>\r\n+                                        <span\r\n+                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n+                                            onClick={() => {\r\n+                                                setDeleteUserId(user._id);\r\n+                                                setShowModel(true);\r\n+                                            }}\r\n+                                        >\r\n+                                            Delete\r\n+                                        </span>\r\n+                                    </Table.Cell>\r\n+                                </Table.Row>\r\n+                            </Table.Body>\r\n+                        ))}\r\n+                    </Table>\r\n+                    {showMore && (\r\n+                        <button\r\n+                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n+                            onClick={handleShowMore}\r\n+                        >\r\n+                            Show more\r\n+                        </button>\r\n+                    )}\r\n+                </>\r\n+            ) : (\r\n+                <p>No Users yet..</p>\r\n+            )}\r\n+            <Modal\r\n+                show={showModel}\r\n+                onClose={() => {\r\n+                    setShowModel(false);\r\n+                }}\r\n+                size=\"md\"\r\n+                popup\r\n+            >\r\n+                <ModalHeader />\r\n+                <ModalBody>\r\n+                    <div className=\"text-center\">\r\n+                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n+                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n+                            Are you sure you want to delete this account?\r\n+                        </h3>\r\n+                        <div className=\"flex justify-center gap-4\">\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n+                                yes,Delete\r\n+                            </Button>\r\n+                            <Button\r\n+                                color=\"gray\"\r\n+                                onClick={() => {\r\n+                                    setShowModel(false);\r\n+                                }}\r\n+                            >\r\n+                                No,cancel\r\n+                            </Button>\r\n+                        </div>\r\n+                    </div>\r\n+                </ModalBody>\r\n+            </Modal>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1726886486479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteUserId, setDeleteUserId] = useState(null);\r\n+    const [deletecommentsId, setDeleteUserId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n@@ -172,179 +172,4 @@\n             </Modal>\r\n         </div>\r\n     );\r\n }\r\n-import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n-import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n-import { useSelector } from \"react-redux\";\r\n-\r\n-export default function DashComments() {\r\n-    const { currentUser } = useSelector((state) => state.user);\r\n-    const [comments, setUsers] = useState([]);\r\n-    const [showMore, setShowMore] = useState(true);\r\n-    const [deleteUserId, setDeleteUserId] = useState(null);\r\n-    const [showModel, setShowModel] = useState(false);\r\n-    useEffect(() => {\r\n-        const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/user/getUsers\", {\r\n-                method: \"GET\",\r\n-            });\r\n-            const data = await res.json();\r\n-            if (res.ok) {\r\n-                if (data.users.length <= 9) {\r\n-                    setShowMore(false);\r\n-                }\r\n-                setUsers(data.users);\r\n-            }\r\n-        };\r\n-\r\n-        if (currentUser.payload.admin) {\r\n-            fetchPost();\r\n-        }\r\n-    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n-\r\n-    const handleShowMore = async () => {\r\n-        const startIndex = users.length;\r\n-        try {\r\n-            const res = await fetch(\r\n-                `/api/user/getUsers&startIndex=${startIndex}`\r\n-            );\r\n-\r\n-            const data = await res.json();\r\n-            if (res.ok && data.users.length > 0) {\r\n-                setUsers((prev) => [...prev, ...data.users]);\r\n-            }\r\n-            if (data.users.length < 9) {\r\n-                setShowMore(false);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    const deleteUserHandler = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n-                method: \"DELETE\",\r\n-            });\r\n-            const data = await res.json();\r\n-\r\n-            if (res.ok) {\r\n-                setUsers((prev) =>\r\n-                    prev.filter((user) => user._id !== deleteUserId)\r\n-                );\r\n-                setShowModel(false);\r\n-            } else {\r\n-                console.log(data.message);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n-            {currentUser.payload.admin && users.length > 0 ? (\r\n-                <>\r\n-                    <Table hoverable className=\"shadow-md \">\r\n-                        <Table.Head>\r\n-                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n-                            <Table.HeadCell>User image</Table.HeadCell>\r\n-                            <Table.HeadCell>Username</Table.HeadCell>\r\n-                            <Table.HeadCell>Email</Table.HeadCell>\r\n-                            <Table.HeadCell>Admin</Table.HeadCell>\r\n-                            <Table.HeadCell>Delete</Table.HeadCell>\r\n-                        </Table.Head>\r\n-                        {users.map((user) => (\r\n-                            // eslint-disable-next-line react/jsx-key\r\n-                            <Table.Body key={`body${user._id}`}>\r\n-                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n-                                    <Table.Cell key={user.updatedAt + user._id}>\r\n-                                        {new Date(\r\n-                                            user.createdAt\r\n-                                        ).toLocaleDateString()}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.slug}>\r\n-                                        <img\r\n-                                            src={user.profilePicture}\r\n-                                            alt=\"Post Image\"\r\n-                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n-                                        />\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title}>\r\n-                                        {user.username}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title + user.slug}>\r\n-                                        {user.email}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell>\r\n-                                        {user.admin ? (\r\n-                                            <FaCheck className=\"text-green-500\" />\r\n-                                        ) : (\r\n-                                            <FaTimes className=\"text-red-500\" />\r\n-                                        )}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={`delete${user._id}`}>\r\n-                                        <span\r\n-                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n-                                            onClick={() => {\r\n-                                                setDeleteUserId(user._id);\r\n-                                                setShowModel(true);\r\n-                                            }}\r\n-                                        >\r\n-                                            Delete\r\n-                                        </span>\r\n-                                    </Table.Cell>\r\n-                                </Table.Row>\r\n-                            </Table.Body>\r\n-                        ))}\r\n-                    </Table>\r\n-                    {showMore && (\r\n-                        <button\r\n-                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n-                            onClick={handleShowMore}\r\n-                        >\r\n-                            Show more\r\n-                        </button>\r\n-                    )}\r\n-                </>\r\n-            ) : (\r\n-                <p>No Users yet..</p>\r\n-            )}\r\n-            <Modal\r\n-                show={showModel}\r\n-                onClose={() => {\r\n-                    setShowModel(false);\r\n-                }}\r\n-                size=\"md\"\r\n-                popup\r\n-            >\r\n-                <ModalHeader />\r\n-                <ModalBody>\r\n-                    <div className=\"text-center\">\r\n-                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n-                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n-                            Are you sure you want to delete this account?\r\n-                        </h3>\r\n-                        <div className=\"flex justify-center gap-4\">\r\n-                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n-                                yes,Delete\r\n-                            </Button>\r\n-                            <Button\r\n-                                color=\"gray\"\r\n-                                onClick={() => {\r\n-                                    setShowModel(false);\r\n-                                }}\r\n-                            >\r\n-                                No,cancel\r\n-                            </Button>\r\n-                        </div>\r\n-                    </div>\r\n-                </ModalBody>\r\n-            </Modal>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1726886492174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deletecommentsId, setDeleteUserId] = useState(null);\r\n+    const [deleteCommentsId, setDeleteUserId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n"
                },
                {
                    "date": 1726886501911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentsId, setDeleteUserId] = useState(null);\r\n+    const [deleteCommentsId, setDeleteId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n"
                },
                {
                    "date": 1726886509501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentsId, setDeleteId] = useState(null);\r\n+    const [deleteCommentsId, setDeletecommentsId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n"
                },
                {
                    "date": 1726886516449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentsId, setDeletecommentsId] = useState(null);\r\n+    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n"
                },
                {
                    "date": 1726886524618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n+    const [deleteCommentId, setDeletecommentId] = useState(null);comments\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n"
                },
                {
                    "date": 1726886531592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentId, setDeletecommentId] = useState(null);comments\r\n+    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/user/getUsers\", {\r\n"
                },
                {
                    "date": 1726886540496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const [deleteCommentId, setDeletecommentId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/user/getUsers\", {\r\n+            const res = await fetch(\"/api/comment/getUsers\", {\r\n                 method: \"GET\",\r\n             });\r\n             const data = await res.json();\r\n             if (res.ok) {\r\n"
                },
                {
                    "date": 1726886552923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     const [deleteCommentId, setDeletecommentId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/comment/getUsers\", {\r\n+            const res = await fetch(\"/api/comment/getComment\", {\r\n                 method: \"GET\",\r\n             });\r\n             const data = await res.json();\r\n             if (res.ok) {\r\n"
                },
                {
                    "date": 1726886573160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n+import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n+import { useSelector } from \"react-redux\";\r\n+\r\n+export default function DashComments() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [comments, setComments] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);\r\n+    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n+    const [showModel, setShowModel] = useState(false);\r\n+    useEffect(() => {\r\n+        const fetchPost = async () => {\r\n+            const res = await fetch(\"/api/comment/getComment\", {\r\n+                method: \"GET\",\r\n+            });\r\n+            const data = await res.json();\r\n+            if (res.ok) {\r\n+                if (data.users.length <= 9) {\r\n+                    setShowMore(false);\r\n+                }\r\n+                setComments(data.users);\r\n+            }\r\n+        };\r\n+\r\n+        if (currentUser.payload.admin) {\r\n+            fetchPost();\r\n+        }\r\n+    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n+\r\n+    const handleShowMore = async () => {\r\n+        const startIndex = users.length;\r\n+        try {\r\n+            const res = await fetch(\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n+            );\r\n+\r\n+            const data = await res.json();\r\n+            if (res.ok && data.users.length > 0) {\r\n+                setComments((prev) => [...prev, ...data.users]);\r\n+            }\r\n+            if (data.users.length < 9) {\r\n+                setShowMore(false);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const deleteUserHandler = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n+                method: \"DELETE\",\r\n+            });\r\n+            const data = await res.json();\r\n+\r\n+            if (res.ok) {\r\n+                setComments((prev) =>\r\n+                    prev.filter((user) => user._id !== deleteUserId)\r\n+                );\r\n+                setShowModel(false);\r\n+            } else {\r\n+                console.log(data.message);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n+            {currentUser.payload.admin && users.length > 0 ? (\r\n+                <>\r\n+                    <Table hoverable className=\"shadow-md \">\r\n+                        <Table.Head>\r\n+                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n+                            <Table.HeadCell>User image</Table.HeadCell>\r\n+                            <Table.HeadCell>Username</Table.HeadCell>\r\n+                            <Table.HeadCell>Email</Table.HeadCell>\r\n+                            <Table.HeadCell>Admin</Table.HeadCell>\r\n+                            <Table.HeadCell>Delete</Table.HeadCell>\r\n+                        </Table.Head>\r\n+                        {users.map((user) => (\r\n+                            // eslint-disable-next-line react/jsx-key\r\n+                            <Table.Body key={`body${user._id}`}>\r\n+                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n+                                    <Table.Cell key={user.updatedAt + user._id}>\r\n+                                        {new Date(\r\n+                                            user.createdAt\r\n+                                        ).toLocaleDateString()}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.slug}>\r\n+                                        <img\r\n+                                            src={user.profilePicture}\r\n+                                            alt=\"Post Image\"\r\n+                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n+                                        />\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title}>\r\n+                                        {user.username}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title + user.slug}>\r\n+                                        {user.email}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell>\r\n+                                        {user.admin ? (\r\n+                                            <FaCheck className=\"text-green-500\" />\r\n+                                        ) : (\r\n+                                            <FaTimes className=\"text-red-500\" />\r\n+                                        )}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`delete${user._id}`}>\r\n+                                        <span\r\n+                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n+                                            onClick={() => {\r\n+                                                setDeleteUserId(user._id);\r\n+                                                setShowModel(true);\r\n+                                            }}\r\n+                                        >\r\n+                                            Delete\r\n+                                        </span>\r\n+                                    </Table.Cell>\r\n+                                </Table.Row>\r\n+                            </Table.Body>\r\n+                        ))}\r\n+                    </Table>\r\n+                    {showMore && (\r\n+                        <button\r\n+                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n+                            onClick={handleShowMore}\r\n+                        >\r\n+                            Show more\r\n+                        </button>\r\n+                    )}\r\n+                </>\r\n+            ) : (\r\n+                <p>No Users yet..</p>\r\n+            )}\r\n+            <Modal\r\n+                show={showModel}\r\n+                onClose={() => {\r\n+                    setShowModel(false);\r\n+                }}\r\n+                size=\"md\"\r\n+                popup\r\n+            >\r\n+                <ModalHeader />\r\n+                <ModalBody>\r\n+                    <div className=\"text-center\">\r\n+                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n+                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n+                            Are you sure you want to delete this account?\r\n+                        </h3>\r\n+                        <div className=\"flex justify-center gap-4\">\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n+                                yes,Delete\r\n+                            </Button>\r\n+                            <Button\r\n+                                color=\"gray\"\r\n+                                onClick={() => {\r\n+                                    setShowModel(false);\r\n+                                }}\r\n+                            >\r\n+                                No,cancel\r\n+                            </Button>\r\n+                        </div>\r\n+                    </div>\r\n+                </ModalBody>\r\n+            </Modal>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1726886596958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n                 method: \"GET\",\r\n             });\r\n             const data = await res.json();\r\n             if (res.ok) {\r\n-                if (data.users.length <= 9) {\r\n+                if (data.comments.length <= 9) {\r\n                     setShowMore(false);\r\n                 }\r\n                 setComments(data.users);\r\n             }\r\n@@ -172,179 +172,4 @@\n             </Modal>\r\n         </div>\r\n     );\r\n }\r\n-import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n-import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n-import { useSelector } from \"react-redux\";\r\n-\r\n-export default function DashComments() {\r\n-    const { currentUser } = useSelector((state) => state.user);\r\n-    const [comments, setComments] = useState([]);\r\n-    const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n-    const [showModel, setShowModel] = useState(false);\r\n-    useEffect(() => {\r\n-        const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/comment/getComment\", {\r\n-                method: \"GET\",\r\n-            });\r\n-            const data = await res.json();\r\n-            if (res.ok) {\r\n-                if (data.users.length <= 9) {\r\n-                    setShowMore(false);\r\n-                }\r\n-                setUsers(data.users);\r\n-            }\r\n-        };\r\n-\r\n-        if (currentUser.payload.admin) {\r\n-            fetchPost();\r\n-        }\r\n-    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n-\r\n-    const handleShowMore = async () => {\r\n-        const startIndex = users.length;\r\n-        try {\r\n-            const res = await fetch(\r\n-                `/api/user/getUsers&startIndex=${startIndex}`\r\n-            );\r\n-\r\n-            const data = await res.json();\r\n-            if (res.ok && data.users.length > 0) {\r\n-                setUsers((prev) => [...prev, ...data.users]);\r\n-            }\r\n-            if (data.users.length < 9) {\r\n-                setShowMore(false);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    const deleteUserHandler = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n-                method: \"DELETE\",\r\n-            });\r\n-            const data = await res.json();\r\n-\r\n-            if (res.ok) {\r\n-                setUsers((prev) =>\r\n-                    prev.filter((user) => user._id !== deleteUserId)\r\n-                );\r\n-                setShowModel(false);\r\n-            } else {\r\n-                console.log(data.message);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n-            {currentUser.payload.admin && users.length > 0 ? (\r\n-                <>\r\n-                    <Table hoverable className=\"shadow-md \">\r\n-                        <Table.Head>\r\n-                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n-                            <Table.HeadCell>User image</Table.HeadCell>\r\n-                            <Table.HeadCell>Username</Table.HeadCell>\r\n-                            <Table.HeadCell>Email</Table.HeadCell>\r\n-                            <Table.HeadCell>Admin</Table.HeadCell>\r\n-                            <Table.HeadCell>Delete</Table.HeadCell>\r\n-                        </Table.Head>\r\n-                        {users.map((user) => (\r\n-                            // eslint-disable-next-line react/jsx-key\r\n-                            <Table.Body key={`body${user._id}`}>\r\n-                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n-                                    <Table.Cell key={user.updatedAt + user._id}>\r\n-                                        {new Date(\r\n-                                            user.createdAt\r\n-                                        ).toLocaleDateString()}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.slug}>\r\n-                                        <img\r\n-                                            src={user.profilePicture}\r\n-                                            alt=\"Post Image\"\r\n-                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n-                                        />\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title}>\r\n-                                        {user.username}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title + user.slug}>\r\n-                                        {user.email}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell>\r\n-                                        {user.admin ? (\r\n-                                            <FaCheck className=\"text-green-500\" />\r\n-                                        ) : (\r\n-                                            <FaTimes className=\"text-red-500\" />\r\n-                                        )}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={`delete${user._id}`}>\r\n-                                        <span\r\n-                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n-                                            onClick={() => {\r\n-                                                setDeleteUserId(user._id);\r\n-                                                setShowModel(true);\r\n-                                            }}\r\n-                                        >\r\n-                                            Delete\r\n-                                        </span>\r\n-                                    </Table.Cell>\r\n-                                </Table.Row>\r\n-                            </Table.Body>\r\n-                        ))}\r\n-                    </Table>\r\n-                    {showMore && (\r\n-                        <button\r\n-                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n-                            onClick={handleShowMore}\r\n-                        >\r\n-                            Show more\r\n-                        </button>\r\n-                    )}\r\n-                </>\r\n-            ) : (\r\n-                <p>No Users yet..</p>\r\n-            )}\r\n-            <Modal\r\n-                show={showModel}\r\n-                onClose={() => {\r\n-                    setShowModel(false);\r\n-                }}\r\n-                size=\"md\"\r\n-                popup\r\n-            >\r\n-                <ModalHeader />\r\n-                <ModalBody>\r\n-                    <div className=\"text-center\">\r\n-                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n-                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n-                            Are you sure you want to delete this account?\r\n-                        </h3>\r\n-                        <div className=\"flex justify-center gap-4\">\r\n-                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n-                                yes,Delete\r\n-                            </Button>\r\n-                            <Button\r\n-                                color=\"gray\"\r\n-                                onClick={() => {\r\n-                                    setShowModel(false);\r\n-                                }}\r\n-                            >\r\n-                                No,cancel\r\n-                            </Button>\r\n-                        </div>\r\n-                    </div>\r\n-                </ModalBody>\r\n-            </Modal>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1726886603684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n+import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n+import { useSelector } from \"react-redux\";\r\n+\r\n+export default function DashComments() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [comments, setComments] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);\r\n+    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n+    const [showModel, setShowModel] = useState(false);\r\n+    useEffect(() => {\r\n+        const fetchPost = async () => {\r\n+            const res = await fetch(\"/api/comment/getComment\", {\r\n+                method: \"GET\",\r\n+            });\r\n+            const data = await res.json();\r\n+            if (res.ok) {\r\n+                if (data.comments.length <= 9) {\r\n+                    setShowMore(false);\r\n+                }\r\n+                setComments(data.comments);\r\n+            }\r\n+        };\r\n+\r\n+        if (currentUser.payload.admin) {\r\n+            fetchPost();\r\n+        }\r\n+    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n+\r\n+    const handleShowMore = async () => {\r\n+        const startIndex = comments.length;\r\n+        try {\r\n+            const res = await fetch(\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n+            );\r\n+\r\n+            const data = await res.json();\r\n+            if (res.ok && data.comments.length > 0) {\r\n+                setComments((prev) => [...prev, ...data.comments]);\r\n+            }\r\n+            if (data.comments.length < 9) {\r\n+                setShowMore(false);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const deleteUserHandler = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n+                method: \"DELETE\",\r\n+            });\r\n+            const data = await res.json();\r\n+\r\n+            if (res.ok) {\r\n+                setComments((prev) =>\r\n+                    prev.filter((user) => user._id !== deleteUserId)\r\n+                );\r\n+                setShowModel(false);\r\n+            } else {\r\n+                console.log(data.message);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n+            {currentUser.payload.admin && users.length > 0 ? (\r\n+                <>\r\n+                    <Table hoverable className=\"shadow-md \">\r\n+                        <Table.Head>\r\n+                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n+                            <Table.HeadCell>User image</Table.HeadCell>\r\n+                            <Table.HeadCell>Username</Table.HeadCell>\r\n+                            <Table.HeadCell>Email</Table.HeadCell>\r\n+                            <Table.HeadCell>Admin</Table.HeadCell>\r\n+                            <Table.HeadCell>Delete</Table.HeadCell>\r\n+                        </Table.Head>\r\n+                        {users.map((user) => (\r\n+                            // eslint-disable-next-line react/jsx-key\r\n+                            <Table.Body key={`body${user._id}`}>\r\n+                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n+                                    <Table.Cell key={user.updatedAt + user._id}>\r\n+                                        {new Date(\r\n+                                            user.createdAt\r\n+                                        ).toLocaleDateString()}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.slug}>\r\n+                                        <img\r\n+                                            src={user.profilePicture}\r\n+                                            alt=\"Post Image\"\r\n+                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n+                                        />\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title}>\r\n+                                        {user.username}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title + user.slug}>\r\n+                                        {user.email}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell>\r\n+                                        {user.admin ? (\r\n+                                            <FaCheck className=\"text-green-500\" />\r\n+                                        ) : (\r\n+                                            <FaTimes className=\"text-red-500\" />\r\n+                                        )}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`delete${user._id}`}>\r\n+                                        <span\r\n+                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n+                                            onClick={() => {\r\n+                                                setDeleteUserId(user._id);\r\n+                                                setShowModel(true);\r\n+                                            }}\r\n+                                        >\r\n+                                            Delete\r\n+                                        </span>\r\n+                                    </Table.Cell>\r\n+                                </Table.Row>\r\n+                            </Table.Body>\r\n+                        ))}\r\n+                    </Table>\r\n+                    {showMore && (\r\n+                        <button\r\n+                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n+                            onClick={handleShowMore}\r\n+                        >\r\n+                            Show more\r\n+                        </button>\r\n+                    )}\r\n+                </>\r\n+            ) : (\r\n+                <p>No Users yet..</p>\r\n+            )}\r\n+            <Modal\r\n+                show={showModel}\r\n+                onClose={() => {\r\n+                    setShowModel(false);\r\n+                }}\r\n+                size=\"md\"\r\n+                popup\r\n+            >\r\n+                <ModalHeader />\r\n+                <ModalBody>\r\n+                    <div className=\"text-center\">\r\n+                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n+                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n+                            Are you sure you want to delete this account?\r\n+                        </h3>\r\n+                        <div className=\"flex justify-center gap-4\">\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n+                                yes,Delete\r\n+                            </Button>\r\n+                            <Button\r\n+                                color=\"gray\"\r\n+                                onClick={() => {\r\n+                                    setShowModel(false);\r\n+                                }}\r\n+                            >\r\n+                                No,cancel\r\n+                            </Button>\r\n+                        </div>\r\n+                    </div>\r\n+                </ModalBody>\r\n+            </Modal>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1726886634670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,16 +51,16 @@\n     const deleteUserHandler = async (e) => {\r\n         e.preventDefault();\r\n \r\n         try {\r\n-            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n+            const res = await fetch(`/api/user/delete/${deleteCommentId}`, {\r\n                 method: \"DELETE\",\r\n             });\r\n             const data = await res.json();\r\n \r\n             if (res.ok) {\r\n                 setComments((prev) =>\r\n-                    prev.filter((user) => user._id !== deleteUserId)\r\n+                    prev.filter((user) => user._id !== deleteCommentId)\r\n                 );\r\n                 setShowModel(false);\r\n             } else {\r\n                 console.log(data.message);\r\n@@ -71,9 +71,9 @@\n     };\r\n \r\n     return (\r\n         <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n-            {currentUser.payload.admin && users.length > 0 ? (\r\n+            {currentUser.payload.admin && comments.length > 0 ? (\r\n                 <>\r\n                     <Table hoverable className=\"shadow-md \">\r\n                         <Table.Head>\r\n                             <Table.HeadCell>Date Created</Table.HeadCell>\r\n@@ -82,9 +82,9 @@\n                             <Table.HeadCell>Email</Table.HeadCell>\r\n                             <Table.HeadCell>Admin</Table.HeadCell>\r\n                             <Table.HeadCell>Delete</Table.HeadCell>\r\n                         </Table.Head>\r\n-                        {users.map((user) => (\r\n+                        {comments.map((user) => (\r\n                             // eslint-disable-next-line react/jsx-key\r\n                             <Table.Body key={`body${user._id}`}>\r\n                                 <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n                                     <Table.Cell key={user.updatedAt + user._id}>\r\n@@ -172,179 +172,4 @@\n             </Modal>\r\n         </div>\r\n     );\r\n }\r\n-import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n-import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n-import { useSelector } from \"react-redux\";\r\n-\r\n-export default function DashComments() {\r\n-    const { currentUser } = useSelector((state) => state.user);\r\n-    const [comments, setComments] = useState([]);\r\n-    const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n-    const [showModel, setShowModel] = useState(false);\r\n-    useEffect(() => {\r\n-        const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/comment/getComment\", {\r\n-                method: \"GET\",\r\n-            });\r\n-            const data = await res.json();\r\n-            if (res.ok) {\r\n-                if (data.comments.length <= 9) {\r\n-                    setShowMore(false);\r\n-                }\r\n-                setComments(data.users);\r\n-            }\r\n-        };\r\n-\r\n-        if (currentUser.payload.admin) {\r\n-            fetchPost();\r\n-        }\r\n-    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n-\r\n-    const handleShowMore = async () => {\r\n-        const startIndex = users.length;\r\n-        try {\r\n-            const res = await fetch(\r\n-                `/api/user/getUsers&startIndex=${startIndex}`\r\n-            );\r\n-\r\n-            const data = await res.json();\r\n-            if (res.ok && data.users.length > 0) {\r\n-                setComments((prev) => [...prev, ...data.users]);\r\n-            }\r\n-            if (data.users.length < 9) {\r\n-                setShowMore(false);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    const deleteUserHandler = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const res = await fetch(`/api/user/delete/${deleteUserId}`, {\r\n-                method: \"DELETE\",\r\n-            });\r\n-            const data = await res.json();\r\n-\r\n-            if (res.ok) {\r\n-                setComments((prev) =>\r\n-                    prev.filter((user) => user._id !== deleteUserId)\r\n-                );\r\n-                setShowModel(false);\r\n-            } else {\r\n-                console.log(data.message);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n-            {currentUser.payload.admin && users.length > 0 ? (\r\n-                <>\r\n-                    <Table hoverable className=\"shadow-md \">\r\n-                        <Table.Head>\r\n-                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n-                            <Table.HeadCell>User image</Table.HeadCell>\r\n-                            <Table.HeadCell>Username</Table.HeadCell>\r\n-                            <Table.HeadCell>Email</Table.HeadCell>\r\n-                            <Table.HeadCell>Admin</Table.HeadCell>\r\n-                            <Table.HeadCell>Delete</Table.HeadCell>\r\n-                        </Table.Head>\r\n-                        {users.map((user) => (\r\n-                            // eslint-disable-next-line react/jsx-key\r\n-                            <Table.Body key={`body${user._id}`}>\r\n-                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n-                                    <Table.Cell key={user.updatedAt + user._id}>\r\n-                                        {new Date(\r\n-                                            user.createdAt\r\n-                                        ).toLocaleDateString()}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.slug}>\r\n-                                        <img\r\n-                                            src={user.profilePicture}\r\n-                                            alt=\"Post Image\"\r\n-                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n-                                        />\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title}>\r\n-                                        {user.username}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title + user.slug}>\r\n-                                        {user.email}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell>\r\n-                                        {user.admin ? (\r\n-                                            <FaCheck className=\"text-green-500\" />\r\n-                                        ) : (\r\n-                                            <FaTimes className=\"text-red-500\" />\r\n-                                        )}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={`delete${user._id}`}>\r\n-                                        <span\r\n-                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n-                                            onClick={() => {\r\n-                                                setDeleteUserId(user._id);\r\n-                                                setShowModel(true);\r\n-                                            }}\r\n-                                        >\r\n-                                            Delete\r\n-                                        </span>\r\n-                                    </Table.Cell>\r\n-                                </Table.Row>\r\n-                            </Table.Body>\r\n-                        ))}\r\n-                    </Table>\r\n-                    {showMore && (\r\n-                        <button\r\n-                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n-                            onClick={handleShowMore}\r\n-                        >\r\n-                            Show more\r\n-                        </button>\r\n-                    )}\r\n-                </>\r\n-            ) : (\r\n-                <p>No Users yet..</p>\r\n-            )}\r\n-            <Modal\r\n-                show={showModel}\r\n-                onClose={() => {\r\n-                    setShowModel(false);\r\n-                }}\r\n-                size=\"md\"\r\n-                popup\r\n-            >\r\n-                <ModalHeader />\r\n-                <ModalBody>\r\n-                    <div className=\"text-center\">\r\n-                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n-                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n-                            Are you sure you want to delete this account?\r\n-                        </h3>\r\n-                        <div className=\"flex justify-center gap-4\">\r\n-                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n-                                yes,Delete\r\n-                            </Button>\r\n-                            <Button\r\n-                                color=\"gray\"\r\n-                                onClick={() => {\r\n-                                    setShowModel(false);\r\n-                                }}\r\n-                            >\r\n-                                No,cancel\r\n-                            </Button>\r\n-                        </div>\r\n-                    </div>\r\n-                </ModalBody>\r\n-            </Modal>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1726886650649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n                                     <Table.Cell key={`delete${user._id}`}>\r\n                                         <span\r\n                                             className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n                                             onClick={() => {\r\n-                                                setDeleteUserId(user._id);\r\n+                                                setDeletecommentId(user._id);\r\n                                                 setShowModel(true);\r\n                                             }}\r\n                                         >\r\n                                             Delete\r\n"
                },
                {
                    "date": 1726886657833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n                                     <Table.Cell key={`delete${user._id}`}>\r\n                                         <span\r\n                                             className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n                                             onClick={() => {\r\n-                                                setDeletecommentId(user._id);\r\n+                                                setDeleteCommentId(user._id);\r\n                                                 setShowModel(true);\r\n                                             }}\r\n                                         >\r\n                                             Delete\r\n"
                },
                {
                    "date": 1726886765923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n export default function DashComments() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [comments, setComments] = useState([]);\r\n     const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentId, setDeletecommentId] = useState(null);\r\n+    const [deleteCommentId, setDeleteCommentId] = useState(null);\r\n     const [showModel, setShowModel] = useState(false);\r\n     useEffect(() => {\r\n         const fetchPost = async () => {\r\n             const res = await fetch(\"/api/comment/getComment\", {\r\n@@ -77,9 +77,9 @@\n                     <Table hoverable className=\"shadow-md \">\r\n                         <Table.Head>\r\n                             <Table.HeadCell>Date Created</Table.HeadCell>\r\n                             <Table.HeadCell>User image</Table.HeadCell>\r\n-                            <Table.HeadCell>Username</Table.HeadCell>\r\n+                            <Table.HeadCell>Comment</Table.HeadCell>\r\n                             <Table.HeadCell>Email</Table.HeadCell>\r\n                             <Table.HeadCell>Admin</Table.HeadCell>\r\n                             <Table.HeadCell>Delete</Table.HeadCell>\r\n                         </Table.Head>\r\n"
                },
                {
                    "date": 1726886773848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                         <Table.Head>\r\n                             <Table.HeadCell>Date Created</Table.HeadCell>\r\n                             <Table.HeadCell>User image</Table.HeadCell>\r\n                             <Table.HeadCell>Comment</Table.HeadCell>\r\n-                            <Table.HeadCell>Email</Table.HeadCell>\r\n+                            <Table.HeadCell>PostId</Table.HeadCell>\r\n                             <Table.HeadCell>Admin</Table.HeadCell>\r\n                             <Table.HeadCell>Delete</Table.HeadCell>\r\n                         </Table.Head>\r\n                         {comments.map((user) => (\r\n"
                },
                {
                    "date": 1726886779966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n                             <Table.HeadCell>Date Created</Table.HeadCell>\r\n                             <Table.HeadCell>User image</Table.HeadCell>\r\n                             <Table.HeadCell>Comment</Table.HeadCell>\r\n                             <Table.HeadCell>PostId</Table.HeadCell>\r\n-                            <Table.HeadCell>Admin</Table.HeadCell>\r\n+                            <Table.HeadCell>UserId</Table.HeadCell>\r\n                             <Table.HeadCell>Delete</Table.HeadCell>\r\n                         </Table.Head>\r\n                         {comments.map((user) => (\r\n                             // eslint-disable-next-line react/jsx-key\r\n"
                },
                {
                    "date": 1726886823281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n+import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n+import { useSelector } from \"react-redux\";\r\n+\r\n+export default function DashComments() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [comments, setComments] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);\r\n+    const [deleteCommentId, setDeleteCommentId] = useState(null);\r\n+    const [showModel, setShowModel] = useState(false);\r\n+    useEffect(() => {\r\n+        const fetchPost = async () => {\r\n+            const res = await fetch(\"/api/comment/getComment\", {\r\n+                method: \"GET\",\r\n+            });\r\n+            const data = await res.json();\r\n+            if (res.ok) {\r\n+                if (data.comments.length <= 9) {\r\n+                    setShowMore(false);\r\n+                }\r\n+                setComments(data.comments);\r\n+            }\r\n+        };\r\n+\r\n+        if (currentUser.payload.admin) {\r\n+            fetchPost();\r\n+        }\r\n+    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n+\r\n+    const handleShowMore = async () => {\r\n+        const startIndex = comments.length;\r\n+        try {\r\n+            const res = await fetch(\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n+            );\r\n+\r\n+            const data = await res.json();\r\n+            if (res.ok && data.comments.length > 0) {\r\n+                setComments((prev) => [...prev, ...data.comments]);\r\n+            }\r\n+            if (data.comments.length < 9) {\r\n+                setShowMore(false);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const deleteUserHandler = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const res = await fetch(`/api/user/delete/${deleteCommentId}`, {\r\n+                method: \"DELETE\",\r\n+            });\r\n+            const data = await res.json();\r\n+\r\n+            if (res.ok) {\r\n+                setComments((prev) =>\r\n+                    prev.filter((user) => user._id !== deleteCommentId)\r\n+                );\r\n+                setShowModel(false);\r\n+            } else {\r\n+                console.log(data.message);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n+            {currentUser.payload.admin && comments.length > 0 ? (\r\n+                <>\r\n+                    <Table hoverable className=\"shadow-md \">\r\n+                        <Table.Head>\r\n+                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n+                            <Table.HeadCell>User image</Table.HeadCell>\r\n+                            <Table.HeadCell>Comment</Table.HeadCell>\r\n+                            <Table.HeadCell>PostId</Table.HeadCell>\r\n+                            <Table.HeadCell>UserId</Table.HeadCell>\r\n+                            <Table.HeadCell>Delete</Table.HeadCell>\r\n+                        </Table.Head>\r\n+                        {comments.map((user) => (\r\n+                            // eslint-disable-next-line react/jsx-key\r\n+                            <Table.Body key={`body${user._id}`}>\r\n+                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n+                                    <Table.Cell key={user.updatedAt + user._id}>\r\n+                                        {new Date(\r\n+                                            user.up\r\n+                                        ).toLocaleDateString()}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.slug}>\r\n+                                        <img\r\n+                                            src={user.profilePicture}\r\n+                                            alt=\"Post Image\"\r\n+                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n+                                        />\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title}>\r\n+                                        {user.username}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={user.title + user.slug}>\r\n+                                        {user.email}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell>\r\n+                                        {user.admin ? (\r\n+                                            <FaCheck className=\"text-green-500\" />\r\n+                                        ) : (\r\n+                                            <FaTimes className=\"text-red-500\" />\r\n+                                        )}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`delete${user._id}`}>\r\n+                                        <span\r\n+                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n+                                            onClick={() => {\r\n+                                                setDeleteCommentId(user._id);\r\n+                                                setShowModel(true);\r\n+                                            }}\r\n+                                        >\r\n+                                            Delete\r\n+                                        </span>\r\n+                                    </Table.Cell>\r\n+                                </Table.Row>\r\n+                            </Table.Body>\r\n+                        ))}\r\n+                    </Table>\r\n+                    {showMore && (\r\n+                        <button\r\n+                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n+                            onClick={handleShowMore}\r\n+                        >\r\n+                            Show more\r\n+                        </button>\r\n+                    )}\r\n+                </>\r\n+            ) : (\r\n+                <p>No Users yet..</p>\r\n+            )}\r\n+            <Modal\r\n+                show={showModel}\r\n+                onClose={() => {\r\n+                    setShowModel(false);\r\n+                }}\r\n+                size=\"md\"\r\n+                popup\r\n+            >\r\n+                <ModalHeader />\r\n+                <ModalBody>\r\n+                    <div className=\"text-center\">\r\n+                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n+                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n+                            Are you sure you want to delete this account?\r\n+                        </h3>\r\n+                        <div className=\"flex justify-center gap-4\">\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n+                                yes,Delete\r\n+                            </Button>\r\n+                            <Button\r\n+                                color=\"gray\"\r\n+                                onClick={() => {\r\n+                                    setShowModel(false);\r\n+                                }}\r\n+                            >\r\n+                                No,cancel\r\n+                            </Button>\r\n+                        </div>\r\n+                    </div>\r\n+                </ModalBody>\r\n+            </Modal>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1726886858256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,13 +84,13 @@\n                             <Table.HeadCell>Delete</Table.HeadCell>\r\n                         </Table.Head>\r\n                         {comments.map((user) => (\r\n                             // eslint-disable-next-line react/jsx-key\r\n-                            <Table.Body key={`body${user._id}`}>\r\n+                            <Table.Body key={`body${comment._id}`}>\r\n                                 <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n                                     <Table.Cell key={user.updatedAt + user._id}>\r\n                                         {new Date(\r\n-                                            user.up\r\n+                                            user.updatedAt\r\n                                         ).toLocaleDateString()}\r\n                                     </Table.Cell>\r\n                                     <Table.Cell key={user.slug}>\r\n                                         <img\r\n@@ -172,179 +172,4 @@\n             </Modal>\r\n         </div>\r\n     );\r\n }\r\n-import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n-import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n-import { useSelector } from \"react-redux\";\r\n-\r\n-export default function DashComments() {\r\n-    const { currentUser } = useSelector((state) => state.user);\r\n-    const [comments, setComments] = useState([]);\r\n-    const [showMore, setShowMore] = useState(true);\r\n-    const [deleteCommentId, setDeleteCommentId] = useState(null);\r\n-    const [showModel, setShowModel] = useState(false);\r\n-    useEffect(() => {\r\n-        const fetchPost = async () => {\r\n-            const res = await fetch(\"/api/comment/getComment\", {\r\n-                method: \"GET\",\r\n-            });\r\n-            const data = await res.json();\r\n-            if (res.ok) {\r\n-                if (data.comments.length <= 9) {\r\n-                    setShowMore(false);\r\n-                }\r\n-                setComments(data.comments);\r\n-            }\r\n-        };\r\n-\r\n-        if (currentUser.payload.admin) {\r\n-            fetchPost();\r\n-        }\r\n-    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n-\r\n-    const handleShowMore = async () => {\r\n-        const startIndex = comments.length;\r\n-        try {\r\n-            const res = await fetch(\r\n-                `/api/user/getUsers&startIndex=${startIndex}`\r\n-            );\r\n-\r\n-            const data = await res.json();\r\n-            if (res.ok && data.comments.length > 0) {\r\n-                setComments((prev) => [...prev, ...data.comments]);\r\n-            }\r\n-            if (data.comments.length < 9) {\r\n-                setShowMore(false);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    const deleteUserHandler = async (e) => {\r\n-        e.preventDefault();\r\n-\r\n-        try {\r\n-            const res = await fetch(`/api/user/delete/${deleteCommentId}`, {\r\n-                method: \"DELETE\",\r\n-            });\r\n-            const data = await res.json();\r\n-\r\n-            if (res.ok) {\r\n-                setComments((prev) =>\r\n-                    prev.filter((user) => user._id !== deleteCommentId)\r\n-                );\r\n-                setShowModel(false);\r\n-            } else {\r\n-                console.log(data.message);\r\n-            }\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n-            {currentUser.payload.admin && comments.length > 0 ? (\r\n-                <>\r\n-                    <Table hoverable className=\"shadow-md \">\r\n-                        <Table.Head>\r\n-                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n-                            <Table.HeadCell>User image</Table.HeadCell>\r\n-                            <Table.HeadCell>Comment</Table.HeadCell>\r\n-                            <Table.HeadCell>PostId</Table.HeadCell>\r\n-                            <Table.HeadCell>UserId</Table.HeadCell>\r\n-                            <Table.HeadCell>Delete</Table.HeadCell>\r\n-                        </Table.Head>\r\n-                        {comments.map((user) => (\r\n-                            // eslint-disable-next-line react/jsx-key\r\n-                            <Table.Body key={`body${user._id}`}>\r\n-                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n-                                    <Table.Cell key={user.updatedAt + user._id}>\r\n-                                        {new Date(\r\n-                                            user.createdAt\r\n-                                        ).toLocaleDateString()}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.slug}>\r\n-                                        <img\r\n-                                            src={user.profilePicture}\r\n-                                            alt=\"Post Image\"\r\n-                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n-                                        />\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title}>\r\n-                                        {user.username}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={user.title + user.slug}>\r\n-                                        {user.email}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell>\r\n-                                        {user.admin ? (\r\n-                                            <FaCheck className=\"text-green-500\" />\r\n-                                        ) : (\r\n-                                            <FaTimes className=\"text-red-500\" />\r\n-                                        )}\r\n-                                    </Table.Cell>\r\n-                                    <Table.Cell key={`delete${user._id}`}>\r\n-                                        <span\r\n-                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n-                                            onClick={() => {\r\n-                                                setDeleteCommentId(user._id);\r\n-                                                setShowModel(true);\r\n-                                            }}\r\n-                                        >\r\n-                                            Delete\r\n-                                        </span>\r\n-                                    </Table.Cell>\r\n-                                </Table.Row>\r\n-                            </Table.Body>\r\n-                        ))}\r\n-                    </Table>\r\n-                    {showMore && (\r\n-                        <button\r\n-                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n-                            onClick={handleShowMore}\r\n-                        >\r\n-                            Show more\r\n-                        </button>\r\n-                    )}\r\n-                </>\r\n-            ) : (\r\n-                <p>No Users yet..</p>\r\n-            )}\r\n-            <Modal\r\n-                show={showModel}\r\n-                onClose={() => {\r\n-                    setShowModel(false);\r\n-                }}\r\n-                size=\"md\"\r\n-                popup\r\n-            >\r\n-                <ModalHeader />\r\n-                <ModalBody>\r\n-                    <div className=\"text-center\">\r\n-                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n-                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n-                            Are you sure you want to delete this account?\r\n-                        </h3>\r\n-                        <div className=\"flex justify-center gap-4\">\r\n-                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n-                                yes,Delete\r\n-                            </Button>\r\n-                            <Button\r\n-                                color=\"gray\"\r\n-                                onClick={() => {\r\n-                                    setShowModel(false);\r\n-                                }}\r\n-                            >\r\n-                                No,cancel\r\n-                            </Button>\r\n-                        </div>\r\n-                    </div>\r\n-                </ModalBody>\r\n-            </Modal>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1726886868096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                         {comments.map((user) => (\r\n                             // eslint-disable-next-line react/jsx-key\r\n                             <Table.Body key={`body${comment._id}`}>\r\n                                 <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n-                                    <Table.Cell key={user.updatedAt + user._id}>\r\n+                                    <Table.Cell key={comment.updatedAt + user._id}>\r\n                                         {new Date(\r\n                                             user.updatedAt\r\n                                         ).toLocaleDateString()}\r\n                                     </Table.Cell>\r\n"
                },
                {
                    "date": 1726886878762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,32 +88,32 @@\n                             <Table.Body key={`body${comment._id}`}>\r\n                                 <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n                                     <Table.Cell key={comment.updatedAt + comment._id}>\r\n                                         {new Date(\r\n-                                            user.updatedAt\r\n+                                            comment.updatedAt\r\n                                         ).toLocaleDateString()}\r\n                                     </Table.Cell>\r\n-                                    <Table.Cell key={user.slug}>\r\n+                                    <Table.Cell key={comment.slug}>\r\n                                         <img\r\n-                                            src={user.profilePicture}\r\n+                                            src={comment.profilePicture}\r\n                                             alt=\"Post Image\"\r\n                                             className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n                                         />\r\n                                     </Table.Cell>\r\n-                                    <Table.Cell key={user.title}>\r\n-                                        {user.username}\r\n+                                    <Table.Cell key={comment.title}>\r\n+                                        {comment.commentname}\r\n                                     </Table.Cell>\r\n-                                    <Table.Cell key={user.title + user.slug}>\r\n-                                        {user.email}\r\n+                                    <Table.Cell key={comment.title + comment.slug}>\r\n+                                        {comment.email}\r\n                                     </Table.Cell>\r\n                                     <Table.Cell>\r\n-                                        {user.admin ? (\r\n+                                        {comment.admin ? (\r\n                                             <FaCheck className=\"text-green-500\" />\r\n                                         ) : (\r\n                                             <FaTimes className=\"text-red-500\" />\r\n                                         )}\r\n                                     </Table.Cell>\r\n-                                    <Table.Cell key={`delete${user._id}`}>\r\n+                                    <Table.Cell key={`delete${comment._id}`}>\r\n                                         <span\r\n                                             className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n                                             onClick={() => {\r\n                                                 setDeleteCommentId(user._id);\r\n"
                },
                {
                    "date": 1726886912758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+import { Button, Modal, ModalBody, ModalHeader, Table } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { FaCheck, FaTimes } from \"react-icons/fa\";\r\n+import { HiOutlineExclamationCircle } from \"react-icons/hi2\";\r\n+import { useSelector } from \"react-redux\";\r\n+\r\n+export default function DashComments() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [comments, setComments] = useState([]);\r\n+    const [showMore, setShowMore] = useState(true);\r\n+    const [deleteCommentId, setDeleteCommentId] = useState(null);\r\n+    const [showModel, setShowModel] = useState(false);\r\n+    useEffect(() => {\r\n+        const fetchPost = async () => {\r\n+            const res = await fetch(\"/api/comment/getComment\", {\r\n+                method: \"GET\",\r\n+            });\r\n+            const data = await res.json();\r\n+            if (res.ok) {\r\n+                if (data.comments.length <= 9) {\r\n+                    setShowMore(false);\r\n+                }\r\n+                setComments(data.comments);\r\n+            }\r\n+        };\r\n+\r\n+        if (currentUser.payload.admin) {\r\n+            fetchPost();\r\n+        }\r\n+    }, [currentUser.payload._id, currentUser.payload.admin]);\r\n+\r\n+    const handleShowMore = async () => {\r\n+        const startIndex = comments.length;\r\n+        try {\r\n+            const res = await fetch(\r\n+                `/api/user/getUsers&startIndex=${startIndex}`\r\n+            );\r\n+\r\n+            const data = await res.json();\r\n+            if (res.ok && data.comments.length > 0) {\r\n+                setComments((prev) => [...prev, ...data.comments]);\r\n+            }\r\n+            if (data.comments.length < 9) {\r\n+                setShowMore(false);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const deleteUserHandler = async (e) => {\r\n+        e.preventDefault();\r\n+\r\n+        try {\r\n+            const res = await fetch(`/api/user/delete/${deleteCommentId}`, {\r\n+                method: \"DELETE\",\r\n+            });\r\n+            const data = await res.json();\r\n+\r\n+            if (res.ok) {\r\n+                setComments((prev) =>\r\n+                    prev.filter((user) => user._id !== deleteCommentId)\r\n+                );\r\n+                setShowModel(false);\r\n+            } else {\r\n+                console.log(data.message);\r\n+            }\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"table-auto overflow-x-scroll md:mx-auto p-3 scrollbar scrollbar-track-slate-100 scrollbar-thumb-slate-300 dark:scrollbar-track-slate-700 dark:scrollbar-thumb-slate-500\">\r\n+            {currentUser.payload.admin && comments.length > 0 ? (\r\n+                <>\r\n+                    <Table hoverable className=\"shadow-md \">\r\n+                        <Table.Head>\r\n+                            <Table.HeadCell>Date Created</Table.HeadCell>\r\n+                            <Table.HeadCell>User image</Table.HeadCell>\r\n+                            <Table.HeadCell>Comment</Table.HeadCell>\r\n+                            <Table.HeadCell>PostId</Table.HeadCell>\r\n+                            <Table.HeadCell>UserId</Table.HeadCell>\r\n+                            <Table.HeadCell>Delete</Table.HeadCell>\r\n+                        </Table.Head>\r\n+                        {comments.map((user) => (\r\n+                            // eslint-disable-next-line react/jsx-key\r\n+                            <Table.Body key={`body${comment._id}`}>\r\n+                                <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\r\n+                                    <Table.Cell key={comment.updatedAt + comment._id}>\r\n+                                        {new Date(\r\n+                                            comment.updatedAt\r\n+                                        ).toLocaleDateString()}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={comment.slug}>\r\n+                                        <img\r\n+                                            src={comment.profilePicture}\r\n+                                            alt=\"Post Image\"\r\n+                                            className=\"w-10 h-10 rounded object-cover bg-gray-500\"\r\n+                                        />\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={comment.title}>\r\n+                                        {comment.commentname}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={comment.title + comment.slug}>\r\n+                                        {comment.email}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell>\r\n+                                        {comment.admin ? (\r\n+                                            <FaCheck className=\"text-green-500\" />\r\n+                                        ) : (\r\n+                                            <FaTimes className=\"text-red-500\" />\r\n+                                        )}\r\n+                                    </Table.Cell>\r\n+                                    <Table.Cell key={`delete${comment._id}`}>\r\n+                                        <span\r\n+                                            className=\"font-medium text-red-500 hover:underline cursor-pointer\"\r\n+                                            onClick={() => {\r\n+                                                setDeleteCommentId(comment._id);\r\n+                                                setShowModel(true);\r\n+                                            }}\r\n+                                        >\r\n+                                            Delete\r\n+                                        </span>\r\n+                                    </Table.Cell>\r\n+                                </Table.Row>\r\n+                            </Table.Body>\r\n+                        ))}\r\n+                    </Table>\r\n+                    {showMore && (\r\n+                        <button\r\n+                            className=\"text-teal-500 w-full self-center text-sm py-7\"\r\n+                            onClick={handleShowMore}\r\n+                        >\r\n+                            Show more\r\n+                        </button>\r\n+                    )}\r\n+                </>\r\n+            ) : (\r\n+                <p>No Users yet..</p>\r\n+            )}\r\n+            <Modal\r\n+                show={showModel}\r\n+                onClose={() => {\r\n+                    setShowModel(false);\r\n+                }}\r\n+                size=\"md\"\r\n+                popup\r\n+            >\r\n+                <ModalHeader />\r\n+                <ModalBody>\r\n+                    <div className=\"text-center\">\r\n+                        <HiOutlineExclamationCircle className=\"h-14 w-14 text-gray-400 dark:text-gray-200 mb-4 mx-auto\" />\r\n+                        <h3 className=\"mb-5 text-lg text-gray-500 dark:text-gray-400\">\r\n+                            Are you sure you want to delete this account?\r\n+                        </h3>\r\n+                        <div className=\"flex justify-center gap-4\">\r\n+                            <Button color=\"failure\" onClick={deleteUserHandler}>\r\n+                                yes,Delete\r\n+                            </Button>\r\n+                            <Button\r\n+                                color=\"gray\"\r\n+                                onClick={() => {\r\n+                                    setShowModel(false);\r\n+                                }}\r\n+                            >\r\n+                                No,cancel\r\n+                            </Button>\r\n+                        </div>\r\n+                    </div>\r\n+                </ModalBody>\r\n+            </Modal>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                }
            ],
            "date": 1726886332047,
            "name": "Commit-0",
            "content": "rfc\r\n"
        }
    ]
}