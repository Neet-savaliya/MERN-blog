{
    "sourceFile": "src/pages/UpdatePage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1722916158995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722916164340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,6 @@\n+\r\n+export default function UpdatePage() {\r\n+  return (\r\n+    <div>UpdatePage</div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1722920469730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,179 @@\n+import { Alert, Button, FileInput, Select, TextInput } from \"flowbite-react\";\r\n+import { useState } from \"react\";\r\n+import ReactQuill from \"react-quill\";\r\n+import \"react-quill/dist/quill.snow.css\";\r\n+import {\r\n+    getDownloadURL,\r\n+    getStorage,\r\n\\ No newline at end of file\n+    ref,\r\n+    uploadBytesResumable,\r\n+} from \"firebase/storage\";\r\n+import { app } from \"../firebase\";\r\n+import { CircularProgressbar } from \"react-circular-progressbar\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n \r\n-export default function UpdatePage() {\r\n-  return (\r\n-    <div>UpdatePage</div>\r\n-  )\r\n+export default function CreatePost() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [file, setFile] = useState(null);\r\n+    const [imageUploadProgress, setImageUploadProgress] = useState(null);\r\n+    const [imageUploadError, setImageUploadError] = useState(null);\r\n+    const [formData, setFormData] = useState({});\r\n+    const [uploadPostError, setUploadPostError] = useState(null);\r\n+    const navigate = useNavigate();\r\n+    const handleFileSubmit = () => {\r\n+        try {\r\n+            if (!file) {\r\n+                setImageUploadError(\"Please select the file\");\r\n+                return;\r\n+            }\r\n+            setImageUploadError(null);\r\n+            const storage = getStorage(app);\r\n+            const fileName = new Date().now + \"-\" + file.name;\r\n+            const StorageRef = ref(storage, fileName);\r\n+\r\n+            const uploadTask = uploadBytesResumable(StorageRef, file);\r\n+            uploadTask.on(\r\n+                \"state_changed\",\r\n+                (snapshot) => {\r\n+                    const progress =\r\n+                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n+                    setImageUploadProgress(progress.toFixed(0));\r\n+                },\r\n+                (error) => {\r\n+                    setImageUploadError(error);\r\n+                    setImageUploadProgress(null);\r\n+                },\r\n+                () => {\r\n+                    getDownloadURL(uploadTask.snapshot.ref).then(\r\n+                        (downloadUrl) => {\r\n+                            setImageUploadError(null);\r\n+                            setImageUploadProgress(null);\r\n+                            setFormData({ ...formData, image: downloadUrl });\r\n+                        }\r\n+                    );\r\n+                }\r\n+            );\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const handleFormSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+        try {\r\n+            const res = await fetch(\"/api/post/create-post\", {\r\n+                method: \"post\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({\r\n+                    ...formData,\r\n+                    admin: currentUser.payload.admin,\r\n+                    userId: currentUser.payload._id,\r\n+                }),\r\n+            });\r\n+\r\n+            const data = await res.json();\r\n+\r\n+            if (!res.ok) {\r\n+                setUploadPostError(data.message);\r\n+            }\r\n+            if (res.ok) {\r\n+                setUploadPostError(null);\r\n+                navigate(`/${data.slug}`);\r\n+            }\r\n+        } catch (err) {\r\n+            setUploadPostError(err);\r\n+        }\r\n+    };\r\n+    return (\r\n+        <div className=\"min-h-screen p-3 max-w-3xl mx-auto\">\r\n+            <h1 className=\"text-center text-3xl my-7 font-semibold\">\r\n+                Create a Post\r\n+            </h1>\r\n+            <form onSubmit={handleFormSubmit}>\r\n+                <div className=\"flex flex-col gap-4 sm:flex-row justify-between\">\r\n+                    <TextInput\r\n+                        type=\"text\"\r\n+                        placeholder=\"Title\"\r\n+                        required\r\n+                        id=\"title\"\r\n+                        className=\"flex-1 text-lg\"\r\n+                        onChange={(e) => {\r\n+                            setFormData({ ...formData, title: e.target.value });\r\n+                        }}\r\n+                    />\r\n+                    <Select\r\n+                        onChange={(e) => {\r\n+                            setFormData({\r\n+                                ...formData,\r\n+                                category: e.target.value,\r\n+                            });\r\n+                        }}\r\n+                    >\r\n+                        <option value=\"uncategorized\">Uncategorized</option>\r\n+                        <option value=\"javascript\">Java Script</option>\r\n+                        <option value=\"reactjs\">React.js</option>\r\n+                        <option value=\"nodejs\">Node.js</option>\r\n+                    </Select>\r\n+                </div>\r\n+                <div className=\"flex gap-4 items-center justify-between border-4 border-teal-500 border-dotted p-3 my-3\">\r\n+                    <FileInput\r\n+                        type=\"file\"\r\n+                        accept=\"image/*\"\r\n+                        onChange={(e) => {\r\n+                            setFile(e.target.files[0]);\r\n+                        }}\r\n+                        disabled={imageUploadProgress}\r\n+                    />\r\n+                    <Button\r\n+                        type=\"button\"\r\n+                        gradientDuoTone=\"purpleToBlue\"\r\n+                        onClick={handleFileSubmit}\r\n+                        disabled={imageUploadProgress}\r\n+                    >\r\n+                        {imageUploadProgress ? (\r\n+                            <div className=\"w-16 h-16\">\r\n+                                <CircularProgressbar\r\n+                                    value={imageUploadProgress}\r\n+                                    text={`${imageUploadProgress || 0} %`}\r\n+                                />{\" \"}\r\n+                            </div>\r\n+                        ) : (\r\n+                            \"Upload Image\"\r\n+                        )}\r\n+                    </Button>\r\n+                </div>\r\n+                {imageUploadError && (\r\n+                    <Alert color=\"failure\">{imageUploadError}</Alert>\r\n+                )}\r\n+                {formData.imageUrl && (\r\n+                    <img\r\n+                        className=\"w-full h-72 object-cover mt-3\"\r\n+                        src={formData.imageUrl}\r\n+                        alt=\"Picture\"\r\n+                    />\r\n+                )}\r\n+                <ReactQuill\r\n+                    theme=\"snow\"\r\n+                    placeholder=\"Write something...\"\r\n+                    className=\"h-72 mb-5 mt-5 border-black border-2 \"\r\n+                    onChange={(value) => {\r\n+                        setFormData({ ...formData, content: value });\r\n+                    }}\r\n+                />\r\n+                <Button\r\n+                    type=\"submit\"\r\n+                    gradientDuoTone=\"purpleToPink\"\r\n+                    className=\"w-full\"\r\n+                >\r\n+                    Publish\r\n+                </Button>\r\n+            </form>\r\n+            {uploadPostError && (\r\n+                <Alert color=\"failure\" className=\"mt-5\">\r\n+                    {uploadPostError}\r\n+                </Alert>\r\n+            )}\r\n+        </div>\r\n+    );\r\n }\r\n-rf\n"
                },
                {
                    "date": 1722920481378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import { CircularProgressbar } from \"react-circular-progressbar\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { useSelector } from \"react-redux\";\r\n \r\n-export default function CreatePost() {\r\n+export default function UpdatePost() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n     const [file, setFile] = useState(null);\r\n     const [imageUploadProgress, setImageUploadProgress] = useState(null);\r\n     const [imageUploadError, setImageUploadError] = useState(null);\r\n@@ -175,5 +175,5 @@\n                 </Alert>\r\n             )}\r\n         </div>\r\n     );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1722920502384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \r\n     const handleFormSubmit = async (e) => {\r\n         e.preventDefault();\r\n         try {\r\n-            const res = await fetch(\"/api/post/create-post\", {\r\n+            const res = await fetch(\"/api/post/update-post\", {\r\n                 method: \"post\",\r\n                 headers: { \"Content-Type\": \"application/json\" },\r\n                 body: JSON.stringify({\r\n                     ...formData,\r\n"
                },
                {
                    "date": 1722920623357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n     const [imageUploadError, setImageUploadError] = useState(null);\r\n     const [formData, setFormData] = useState({});\r\n     const [uploadPostError, setUploadPostError] = useState(null);\r\n     const navigate = useNavigate();\r\n+    \r\n     const handleFileSubmit = () => {\r\n         try {\r\n             if (!file) {\r\n                 setImageUploadError(\"Please select the file\");\r\n"
                },
                {
                    "date": 1722920628845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Alert, Button, FileInput, Select, TextInput } from \"flowbite-react\";\r\n-import { useState } from \"react\";\r\n+import { useEffect, useState } from \"react\";\r\n import ReactQuill from \"react-quill\";\r\n import \"react-quill/dist/quill.snow.css\";\r\n import {\r\n     getDownloadURL,\r\n@@ -20,9 +20,10 @@\n     const [imageUploadError, setImageUploadError] = useState(null);\r\n     const [formData, setFormData] = useState({});\r\n     const [uploadPostError, setUploadPostError] = useState(null);\r\n     const navigate = useNavigate();\r\n-    \r\n+\r\n+    useEffect()\r\n     const handleFileSubmit = () => {\r\n         try {\r\n             if (!file) {\r\n                 setImageUploadError(\"Please select the file\");\r\n"
                },
                {
                    "date": 1722920634308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     const [formData, setFormData] = useState({});\r\n     const [uploadPostError, setUploadPostError] = useState(null);\r\n     const navigate = useNavigate();\r\n \r\n-    useEffect()\r\n+    useEffect(()=>{},[])\r\n     const handleFileSubmit = () => {\r\n         try {\r\n             if (!file) {\r\n                 setImageUploadError(\"Please select the file\");\r\n"
                },
                {
                    "date": 1722920675026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     uploadBytesResumable,\r\n } from \"firebase/storage\";\r\n import { app } from \"../firebase\";\r\n import { CircularProgressbar } from \"react-circular-progressbar\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import { useNavigate, useParams } from \"react-router-dom\";\r\n import { useSelector } from \"react-redux\";\r\n \r\n export default function UpdatePost() {\r\n     const { currentUser } = useSelector((state) => state.user);\r\n"
                },
                {
                    "date": 1722920691428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     const [imageUploadError, setImageUploadError] = useState(null);\r\n     const [formData, setFormData] = useState({});\r\n     const [uploadPostError, setUploadPostError] = useState(null);\r\n     const navigate = useNavigate();\r\n-    const \r\n+    const {postId} = \r\n \r\n     useEffect(()=>{},[])\r\n     const handleFileSubmit = () => {\r\n         try {\r\n"
                },
                {
                    "date": 1722920704811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+import { Alert, Button, FileInput, Select, TextInput } from \"flowbite-react\";\r\n+import { useEffect, useState } from \"react\";\r\n+import ReactQuill from \"react-quill\";\r\n+import \"react-quill/dist/quill.snow.css\";\r\n+import {\r\n+    getDownloadURL,\r\n+    getStorage,\r\n+    ref,\r\n+    uploadBytesResumable,\r\n+} from \"firebase/storage\";\r\n+import { app } from \"../firebase\";\r\n+import { CircularProgressbar } from \"react-circular-progressbar\";\r\n+import { useNavigate, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+\r\n+export default function UpdatePost() {\r\n+    const { currentUser } = useSelector((state) => state.user);\r\n+    const [file, setFile] = useState(null);\r\n+    const [imageUploadProgress, setImageUploadProgress] = useState(null);\r\n+    const [imageUploadError, setImageUploadError] = useState(null);\r\n+    const [formData, setFormData] = useState({});\r\n+    const [uploadPostError, setUploadPostError] = useState(null);\r\n+    const navigate = useNavigate();\r\n+    const {postId} = useParams();\r\n+\r\n+    useEffect(()=>{},[postId])\r\n+    const handleFileSubmit = () => {\r\n+        try {\r\n+            if (!file) {\r\n+                setImageUploadError(\"Please select the file\");\r\n+                return;\r\n+            }\r\n+            setImageUploadError(null);\r\n+            const storage = getStorage(app);\r\n+            const fileName = new Date().now + \"-\" + file.name;\r\n+            const StorageRef = ref(storage, fileName);\r\n+\r\n+            const uploadTask = uploadBytesResumable(StorageRef, file);\r\n+            uploadTask.on(\r\n+                \"state_changed\",\r\n+                (snapshot) => {\r\n+                    const progress =\r\n+                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n+                    setImageUploadProgress(progress.toFixed(0));\r\n+                },\r\n+                (error) => {\r\n+                    setImageUploadError(error);\r\n+                    setImageUploadProgress(null);\r\n+                },\r\n+                () => {\r\n+                    getDownloadURL(uploadTask.snapshot.ref).then(\r\n+                        (downloadUrl) => {\r\n+                            setImageUploadError(null);\r\n+                            setImageUploadProgress(null);\r\n+                            setFormData({ ...formData, image: downloadUrl });\r\n+                        }\r\n+                    );\r\n+                }\r\n+            );\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    };\r\n+\r\n+    const handleFormSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+        try {\r\n+            const res = await fetch(\"/api/post/update-post\", {\r\n+                method: \"post\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({\r\n+                    ...formData,\r\n+                    admin: currentUser.payload.admin,\r\n+                    userId: currentUser.payload._id,\r\n+                }),\r\n+            });\r\n+\r\n+            const data = await res.json();\r\n+\r\n+            if (!res.ok) {\r\n+                setUploadPostError(data.message);\r\n+            }\r\n+            if (res.ok) {\r\n+                setUploadPostError(null);\r\n+                navigate(`/${data.slug}`);\r\n+            }\r\n+        } catch (err) {\r\n+            setUploadPostError(err);\r\n+        }\r\n+    };\r\n+    return (\r\n+        <div className=\"min-h-screen p-3 max-w-3xl mx-auto\">\r\n+            <h1 className=\"text-center text-3xl my-7 font-semibold\">\r\n+                Create a Post\r\n+            </h1>\r\n+            <form onSubmit={handleFormSubmit}>\r\n+                <div className=\"flex flex-col gap-4 sm:flex-row justify-between\">\r\n+                    <TextInput\r\n+                        type=\"text\"\r\n+                        placeholder=\"Title\"\r\n+                        required\r\n+                        id=\"title\"\r\n+                        className=\"flex-1 text-lg\"\r\n+                        onChange={(e) => {\r\n+                            setFormData({ ...formData, title: e.target.value });\r\n+                        }}\r\n+                    />\r\n+                    <Select\r\n+                        onChange={(e) => {\r\n+                            setFormData({\r\n+                                ...formData,\r\n+                                category: e.target.value,\r\n+                            });\r\n+                        }}\r\n+                    >\r\n+                        <option value=\"uncategorized\">Uncategorized</option>\r\n+                        <option value=\"javascript\">Java Script</option>\r\n+                        <option value=\"reactjs\">React.js</option>\r\n+                        <option value=\"nodejs\">Node.js</option>\r\n+                    </Select>\r\n+                </div>\r\n+                <div className=\"flex gap-4 items-center justify-between border-4 border-teal-500 border-dotted p-3 my-3\">\r\n+                    <FileInput\r\n+                        type=\"file\"\r\n+                        accept=\"image/*\"\r\n+                        onChange={(e) => {\r\n+                            setFile(e.target.files[0]);\r\n+                        }}\r\n+                        disabled={imageUploadProgress}\r\n+                    />\r\n+                    <Button\r\n+                        type=\"button\"\r\n+                        gradientDuoTone=\"purpleToBlue\"\r\n+                        onClick={handleFileSubmit}\r\n+                        disabled={imageUploadProgress}\r\n+                    >\r\n+                        {imageUploadProgress ? (\r\n+                            <div className=\"w-16 h-16\">\r\n+                                <CircularProgressbar\r\n+                                    value={imageUploadProgress}\r\n+                                    text={`${imageUploadProgress || 0} %`}\r\n+                                />{\" \"}\r\n+                            </div>\r\n+                        ) : (\r\n+                            \"Upload Image\"\r\n+                        )}\r\n+                    </Button>\r\n+                </div>\r\n+                {imageUploadError && (\r\n+                    <Alert color=\"failure\">{imageUploadError}</Alert>\r\n+                )}\r\n+                {formData.imageUrl && (\r\n+                    <img\r\n+                        className=\"w-full h-72 object-cover mt-3\"\r\n+                        src={formData.imageUrl}\r\n+                        alt=\"Picture\"\r\n+                    />\r\n+                )}\r\n+                <ReactQuill\r\n+                    theme=\"snow\"\r\n+                    placeholder=\"Write something...\"\r\n+                    className=\"h-72 mb-5 mt-5 border-black border-2 \"\r\n+                    onChange={(value) => {\r\n+                        setFormData({ ...formData, content: value });\r\n+                    }}\r\n+                />\r\n+                <Button\r\n+                    type=\"submit\"\r\n+                    gradientDuoTone=\"purpleToPink\"\r\n+                    className=\"w-full\"\r\n+                >\r\n+                    Publish\r\n+                </Button>\r\n+            </form>\r\n+            {uploadPostError && (\r\n+                <Alert color=\"failure\" className=\"mt-5\">\r\n+                    {uploadPostError}\r\n+                </Alert>\r\n+            )}\r\n+        </div>\r\n+    );\r\n+}\r\n"
                }
            ],
            "date": 1722916158995,
            "name": "Commit-0",
            "content": "rf"
        }
    ]
}